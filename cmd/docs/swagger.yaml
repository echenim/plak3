basePath: /api/v1
definitions:
  models.PlakUser:
    properties:
      Id:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      updatedAt:
        type: string
    type: object
  searchmodels.UserSearchCriteria:
    type: object
host: localhost:8080
info:
  contact: {}
paths:
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PlakUser'
      summary: Add a new user
      tags:
      - users
  /user/find:
    get:
      consumes:
      - application/json
      description: Get details of a specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PlakUser'
      summary: Get a user
      tags:
      - users
  /user/remove:
    delete:
      consumes:
      - application/json
      description: Delete a user's account
      produces:
      - application/json
      responses:
        "200":
          description: Deleted
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
  /user/search:
    post:
      consumes:
      - application/json
      description: Search for users based on criteria
      parameters:
      - description: Search Criteria
        in: body
        name: criteria
        required: true
        schema:
          $ref: '#/definitions/searchmodels.UserSearchCriteria'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PlakUser'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Search users
      tags:
      - users
  /user/update:
    put:
      consumes:
      - application/json
      description: Update an existing user's details
      produces:
      - application/json
      responses:
        "201":
          description: Updated
          schema:
            type: string
      summary: Update a user
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PlakUser'
            type: array
      summary: List users
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
